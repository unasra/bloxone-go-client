/*
DFP API

Testing InfraServicesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package dfp

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/infobloxopen/bloxone-go-client/dfp"
)

func TestInfraServicesAPIService(t *testing.T) {

	apiClient := dfp.NewAPIClient()

	t.Run("Test InfraServicesAPIService CreateOrUpdateDfpService", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var payloadServiceId string

		resp, httpRes, err := apiClient.InfraServicesAPI.CreateOrUpdateDfpService(context.Background(), payloadServiceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InfraServicesAPIService ListDfpServices", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.InfraServicesAPI.ListDfpServices(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InfraServicesAPIService ReadDfpService", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var serviceId string

		resp, httpRes, err := apiClient.InfraServicesAPI.ReadDfpService(context.Background(), serviceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
